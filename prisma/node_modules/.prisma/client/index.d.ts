
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model mwd_manager
 * 
 */
export type mwd_manager = $Result.DefaultSelection<Prisma.$mwd_managerPayload>
/**
 * Model mwd_log_login_manager
 * 
 */
export type mwd_log_login_manager = $Result.DefaultSelection<Prisma.$mwd_log_login_managerPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Mwd_managers
 * const mwd_managers = await prisma.mwd_manager.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Mwd_managers
   * const mwd_managers = await prisma.mwd_manager.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.mwd_manager`: Exposes CRUD operations for the **mwd_manager** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mwd_managers
    * const mwd_managers = await prisma.mwd_manager.findMany()
    * ```
    */
  get mwd_manager(): Prisma.mwd_managerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mwd_log_login_manager`: Exposes CRUD operations for the **mwd_log_login_manager** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mwd_log_login_managers
    * const mwd_log_login_managers = await prisma.mwd_log_login_manager.findMany()
    * ```
    */
  get mwd_log_login_manager(): Prisma.mwd_log_login_managerDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    mwd_manager: 'mwd_manager',
    mwd_log_login_manager: 'mwd_log_login_manager'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "mwd_manager" | "mwd_log_login_manager"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      mwd_manager: {
        payload: Prisma.$mwd_managerPayload<ExtArgs>
        fields: Prisma.mwd_managerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mwd_managerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mwd_managerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>
          }
          findFirst: {
            args: Prisma.mwd_managerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mwd_managerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>
          }
          findMany: {
            args: Prisma.mwd_managerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>[]
          }
          create: {
            args: Prisma.mwd_managerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>
          }
          createMany: {
            args: Prisma.mwd_managerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mwd_managerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>[]
          }
          delete: {
            args: Prisma.mwd_managerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>
          }
          update: {
            args: Prisma.mwd_managerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>
          }
          deleteMany: {
            args: Prisma.mwd_managerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mwd_managerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mwd_managerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>[]
          }
          upsert: {
            args: Prisma.mwd_managerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_managerPayload>
          }
          aggregate: {
            args: Prisma.Mwd_managerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMwd_manager>
          }
          groupBy: {
            args: Prisma.mwd_managerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mwd_managerGroupByOutputType>[]
          }
          count: {
            args: Prisma.mwd_managerCountArgs<ExtArgs>
            result: $Utils.Optional<Mwd_managerCountAggregateOutputType> | number
          }
        }
      }
      mwd_log_login_manager: {
        payload: Prisma.$mwd_log_login_managerPayload<ExtArgs>
        fields: Prisma.mwd_log_login_managerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mwd_log_login_managerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mwd_log_login_managerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>
          }
          findFirst: {
            args: Prisma.mwd_log_login_managerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mwd_log_login_managerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>
          }
          findMany: {
            args: Prisma.mwd_log_login_managerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>[]
          }
          create: {
            args: Prisma.mwd_log_login_managerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>
          }
          createMany: {
            args: Prisma.mwd_log_login_managerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mwd_log_login_managerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>[]
          }
          delete: {
            args: Prisma.mwd_log_login_managerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>
          }
          update: {
            args: Prisma.mwd_log_login_managerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>
          }
          deleteMany: {
            args: Prisma.mwd_log_login_managerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mwd_log_login_managerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mwd_log_login_managerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>[]
          }
          upsert: {
            args: Prisma.mwd_log_login_managerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mwd_log_login_managerPayload>
          }
          aggregate: {
            args: Prisma.Mwd_log_login_managerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMwd_log_login_manager>
          }
          groupBy: {
            args: Prisma.mwd_log_login_managerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mwd_log_login_managerGroupByOutputType>[]
          }
          count: {
            args: Prisma.mwd_log_login_managerCountArgs<ExtArgs>
            result: $Utils.Optional<Mwd_log_login_managerCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    mwd_manager?: mwd_managerOmit
    mwd_log_login_manager?: mwd_log_login_managerOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Mwd_managerCountOutputType
   */

  export type Mwd_managerCountOutputType = {
    login_logs: number
  }

  export type Mwd_managerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    login_logs?: boolean | Mwd_managerCountOutputTypeCountLogin_logsArgs
  }

  // Custom InputTypes
  /**
   * Mwd_managerCountOutputType without action
   */
  export type Mwd_managerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mwd_managerCountOutputType
     */
    select?: Mwd_managerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mwd_managerCountOutputType without action
   */
  export type Mwd_managerCountOutputTypeCountLogin_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mwd_log_login_managerWhereInput
  }


  /**
   * Models
   */

  /**
   * Model mwd_manager
   */

  export type AggregateMwd_manager = {
    _count: Mwd_managerCountAggregateOutputType | null
    _avg: Mwd_managerAvgAggregateOutputType | null
    _sum: Mwd_managerSumAggregateOutputType | null
    _min: Mwd_managerMinAggregateOutputType | null
    _max: Mwd_managerMaxAggregateOutputType | null
  }

  export type Mwd_managerAvgAggregateOutputType = {
    mg_seq: number | null
    mg_grant_manager: number | null
    mg_grant_account: number | null
    mg_grant_institute: number | null
    mg_grant_result: number | null
    mg_grant_statistic: number | null
    mg_grant_inquiry: number | null
    mg_grant_log: number | null
  }

  export type Mwd_managerSumAggregateOutputType = {
    mg_seq: number | null
    mg_grant_manager: number | null
    mg_grant_account: number | null
    mg_grant_institute: number | null
    mg_grant_result: number | null
    mg_grant_statistic: number | null
    mg_grant_inquiry: number | null
    mg_grant_log: number | null
  }

  export type Mwd_managerMinAggregateOutputType = {
    mg_seq: number | null
    mg_email: string | null
    mg_pw: string | null
    mg_name: string | null
    mg_use: string | null
    mg_cellphone: string | null
    mg_grant_manager: number | null
    mg_grant_account: number | null
    mg_grant_institute: number | null
    mg_grant_result: number | null
    mg_grant_statistic: number | null
    mg_grant_inquiry: number | null
    mg_grant_log: number | null
  }

  export type Mwd_managerMaxAggregateOutputType = {
    mg_seq: number | null
    mg_email: string | null
    mg_pw: string | null
    mg_name: string | null
    mg_use: string | null
    mg_cellphone: string | null
    mg_grant_manager: number | null
    mg_grant_account: number | null
    mg_grant_institute: number | null
    mg_grant_result: number | null
    mg_grant_statistic: number | null
    mg_grant_inquiry: number | null
    mg_grant_log: number | null
  }

  export type Mwd_managerCountAggregateOutputType = {
    mg_seq: number
    mg_email: number
    mg_pw: number
    mg_name: number
    mg_use: number
    mg_cellphone: number
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
    _all: number
  }


  export type Mwd_managerAvgAggregateInputType = {
    mg_seq?: true
    mg_grant_manager?: true
    mg_grant_account?: true
    mg_grant_institute?: true
    mg_grant_result?: true
    mg_grant_statistic?: true
    mg_grant_inquiry?: true
    mg_grant_log?: true
  }

  export type Mwd_managerSumAggregateInputType = {
    mg_seq?: true
    mg_grant_manager?: true
    mg_grant_account?: true
    mg_grant_institute?: true
    mg_grant_result?: true
    mg_grant_statistic?: true
    mg_grant_inquiry?: true
    mg_grant_log?: true
  }

  export type Mwd_managerMinAggregateInputType = {
    mg_seq?: true
    mg_email?: true
    mg_pw?: true
    mg_name?: true
    mg_use?: true
    mg_cellphone?: true
    mg_grant_manager?: true
    mg_grant_account?: true
    mg_grant_institute?: true
    mg_grant_result?: true
    mg_grant_statistic?: true
    mg_grant_inquiry?: true
    mg_grant_log?: true
  }

  export type Mwd_managerMaxAggregateInputType = {
    mg_seq?: true
    mg_email?: true
    mg_pw?: true
    mg_name?: true
    mg_use?: true
    mg_cellphone?: true
    mg_grant_manager?: true
    mg_grant_account?: true
    mg_grant_institute?: true
    mg_grant_result?: true
    mg_grant_statistic?: true
    mg_grant_inquiry?: true
    mg_grant_log?: true
  }

  export type Mwd_managerCountAggregateInputType = {
    mg_seq?: true
    mg_email?: true
    mg_pw?: true
    mg_name?: true
    mg_use?: true
    mg_cellphone?: true
    mg_grant_manager?: true
    mg_grant_account?: true
    mg_grant_institute?: true
    mg_grant_result?: true
    mg_grant_statistic?: true
    mg_grant_inquiry?: true
    mg_grant_log?: true
    _all?: true
  }

  export type Mwd_managerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mwd_manager to aggregate.
     */
    where?: mwd_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_managers to fetch.
     */
    orderBy?: mwd_managerOrderByWithRelationInput | mwd_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mwd_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_managers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mwd_managers
    **/
    _count?: true | Mwd_managerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mwd_managerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mwd_managerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mwd_managerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mwd_managerMaxAggregateInputType
  }

  export type GetMwd_managerAggregateType<T extends Mwd_managerAggregateArgs> = {
        [P in keyof T & keyof AggregateMwd_manager]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMwd_manager[P]>
      : GetScalarType<T[P], AggregateMwd_manager[P]>
  }




  export type mwd_managerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mwd_managerWhereInput
    orderBy?: mwd_managerOrderByWithAggregationInput | mwd_managerOrderByWithAggregationInput[]
    by: Mwd_managerScalarFieldEnum[] | Mwd_managerScalarFieldEnum
    having?: mwd_managerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mwd_managerCountAggregateInputType | true
    _avg?: Mwd_managerAvgAggregateInputType
    _sum?: Mwd_managerSumAggregateInputType
    _min?: Mwd_managerMinAggregateInputType
    _max?: Mwd_managerMaxAggregateInputType
  }

  export type Mwd_managerGroupByOutputType = {
    mg_seq: number
    mg_email: string
    mg_pw: string
    mg_name: string
    mg_use: string
    mg_cellphone: string
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
    _count: Mwd_managerCountAggregateOutputType | null
    _avg: Mwd_managerAvgAggregateOutputType | null
    _sum: Mwd_managerSumAggregateOutputType | null
    _min: Mwd_managerMinAggregateOutputType | null
    _max: Mwd_managerMaxAggregateOutputType | null
  }

  type GetMwd_managerGroupByPayload<T extends mwd_managerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mwd_managerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mwd_managerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mwd_managerGroupByOutputType[P]>
            : GetScalarType<T[P], Mwd_managerGroupByOutputType[P]>
        }
      >
    >


  export type mwd_managerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mg_seq?: boolean
    mg_email?: boolean
    mg_pw?: boolean
    mg_name?: boolean
    mg_use?: boolean
    mg_cellphone?: boolean
    mg_grant_manager?: boolean
    mg_grant_account?: boolean
    mg_grant_institute?: boolean
    mg_grant_result?: boolean
    mg_grant_statistic?: boolean
    mg_grant_inquiry?: boolean
    mg_grant_log?: boolean
    login_logs?: boolean | mwd_manager$login_logsArgs<ExtArgs>
    _count?: boolean | Mwd_managerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mwd_manager"]>

  export type mwd_managerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mg_seq?: boolean
    mg_email?: boolean
    mg_pw?: boolean
    mg_name?: boolean
    mg_use?: boolean
    mg_cellphone?: boolean
    mg_grant_manager?: boolean
    mg_grant_account?: boolean
    mg_grant_institute?: boolean
    mg_grant_result?: boolean
    mg_grant_statistic?: boolean
    mg_grant_inquiry?: boolean
    mg_grant_log?: boolean
  }, ExtArgs["result"]["mwd_manager"]>

  export type mwd_managerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mg_seq?: boolean
    mg_email?: boolean
    mg_pw?: boolean
    mg_name?: boolean
    mg_use?: boolean
    mg_cellphone?: boolean
    mg_grant_manager?: boolean
    mg_grant_account?: boolean
    mg_grant_institute?: boolean
    mg_grant_result?: boolean
    mg_grant_statistic?: boolean
    mg_grant_inquiry?: boolean
    mg_grant_log?: boolean
  }, ExtArgs["result"]["mwd_manager"]>

  export type mwd_managerSelectScalar = {
    mg_seq?: boolean
    mg_email?: boolean
    mg_pw?: boolean
    mg_name?: boolean
    mg_use?: boolean
    mg_cellphone?: boolean
    mg_grant_manager?: boolean
    mg_grant_account?: boolean
    mg_grant_institute?: boolean
    mg_grant_result?: boolean
    mg_grant_statistic?: boolean
    mg_grant_inquiry?: boolean
    mg_grant_log?: boolean
  }

  export type mwd_managerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"mg_seq" | "mg_email" | "mg_pw" | "mg_name" | "mg_use" | "mg_cellphone" | "mg_grant_manager" | "mg_grant_account" | "mg_grant_institute" | "mg_grant_result" | "mg_grant_statistic" | "mg_grant_inquiry" | "mg_grant_log", ExtArgs["result"]["mwd_manager"]>
  export type mwd_managerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    login_logs?: boolean | mwd_manager$login_logsArgs<ExtArgs>
    _count?: boolean | Mwd_managerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type mwd_managerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type mwd_managerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $mwd_managerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mwd_manager"
    objects: {
      login_logs: Prisma.$mwd_log_login_managerPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      mg_seq: number
      mg_email: string
      mg_pw: string
      mg_name: string
      mg_use: string
      mg_cellphone: string
      mg_grant_manager: number
      mg_grant_account: number
      mg_grant_institute: number
      mg_grant_result: number
      mg_grant_statistic: number
      mg_grant_inquiry: number
      mg_grant_log: number
    }, ExtArgs["result"]["mwd_manager"]>
    composites: {}
  }

  type mwd_managerGetPayload<S extends boolean | null | undefined | mwd_managerDefaultArgs> = $Result.GetResult<Prisma.$mwd_managerPayload, S>

  type mwd_managerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mwd_managerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mwd_managerCountAggregateInputType | true
    }

  export interface mwd_managerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mwd_manager'], meta: { name: 'mwd_manager' } }
    /**
     * Find zero or one Mwd_manager that matches the filter.
     * @param {mwd_managerFindUniqueArgs} args - Arguments to find a Mwd_manager
     * @example
     * // Get one Mwd_manager
     * const mwd_manager = await prisma.mwd_manager.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mwd_managerFindUniqueArgs>(args: SelectSubset<T, mwd_managerFindUniqueArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mwd_manager that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mwd_managerFindUniqueOrThrowArgs} args - Arguments to find a Mwd_manager
     * @example
     * // Get one Mwd_manager
     * const mwd_manager = await prisma.mwd_manager.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mwd_managerFindUniqueOrThrowArgs>(args: SelectSubset<T, mwd_managerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mwd_manager that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_managerFindFirstArgs} args - Arguments to find a Mwd_manager
     * @example
     * // Get one Mwd_manager
     * const mwd_manager = await prisma.mwd_manager.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mwd_managerFindFirstArgs>(args?: SelectSubset<T, mwd_managerFindFirstArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mwd_manager that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_managerFindFirstOrThrowArgs} args - Arguments to find a Mwd_manager
     * @example
     * // Get one Mwd_manager
     * const mwd_manager = await prisma.mwd_manager.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mwd_managerFindFirstOrThrowArgs>(args?: SelectSubset<T, mwd_managerFindFirstOrThrowArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mwd_managers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_managerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mwd_managers
     * const mwd_managers = await prisma.mwd_manager.findMany()
     * 
     * // Get first 10 Mwd_managers
     * const mwd_managers = await prisma.mwd_manager.findMany({ take: 10 })
     * 
     * // Only select the `mg_seq`
     * const mwd_managerWithMg_seqOnly = await prisma.mwd_manager.findMany({ select: { mg_seq: true } })
     * 
     */
    findMany<T extends mwd_managerFindManyArgs>(args?: SelectSubset<T, mwd_managerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mwd_manager.
     * @param {mwd_managerCreateArgs} args - Arguments to create a Mwd_manager.
     * @example
     * // Create one Mwd_manager
     * const Mwd_manager = await prisma.mwd_manager.create({
     *   data: {
     *     // ... data to create a Mwd_manager
     *   }
     * })
     * 
     */
    create<T extends mwd_managerCreateArgs>(args: SelectSubset<T, mwd_managerCreateArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mwd_managers.
     * @param {mwd_managerCreateManyArgs} args - Arguments to create many Mwd_managers.
     * @example
     * // Create many Mwd_managers
     * const mwd_manager = await prisma.mwd_manager.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mwd_managerCreateManyArgs>(args?: SelectSubset<T, mwd_managerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mwd_managers and returns the data saved in the database.
     * @param {mwd_managerCreateManyAndReturnArgs} args - Arguments to create many Mwd_managers.
     * @example
     * // Create many Mwd_managers
     * const mwd_manager = await prisma.mwd_manager.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mwd_managers and only return the `mg_seq`
     * const mwd_managerWithMg_seqOnly = await prisma.mwd_manager.createManyAndReturn({
     *   select: { mg_seq: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mwd_managerCreateManyAndReturnArgs>(args?: SelectSubset<T, mwd_managerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mwd_manager.
     * @param {mwd_managerDeleteArgs} args - Arguments to delete one Mwd_manager.
     * @example
     * // Delete one Mwd_manager
     * const Mwd_manager = await prisma.mwd_manager.delete({
     *   where: {
     *     // ... filter to delete one Mwd_manager
     *   }
     * })
     * 
     */
    delete<T extends mwd_managerDeleteArgs>(args: SelectSubset<T, mwd_managerDeleteArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mwd_manager.
     * @param {mwd_managerUpdateArgs} args - Arguments to update one Mwd_manager.
     * @example
     * // Update one Mwd_manager
     * const mwd_manager = await prisma.mwd_manager.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mwd_managerUpdateArgs>(args: SelectSubset<T, mwd_managerUpdateArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mwd_managers.
     * @param {mwd_managerDeleteManyArgs} args - Arguments to filter Mwd_managers to delete.
     * @example
     * // Delete a few Mwd_managers
     * const { count } = await prisma.mwd_manager.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mwd_managerDeleteManyArgs>(args?: SelectSubset<T, mwd_managerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mwd_managers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_managerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mwd_managers
     * const mwd_manager = await prisma.mwd_manager.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mwd_managerUpdateManyArgs>(args: SelectSubset<T, mwd_managerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mwd_managers and returns the data updated in the database.
     * @param {mwd_managerUpdateManyAndReturnArgs} args - Arguments to update many Mwd_managers.
     * @example
     * // Update many Mwd_managers
     * const mwd_manager = await prisma.mwd_manager.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mwd_managers and only return the `mg_seq`
     * const mwd_managerWithMg_seqOnly = await prisma.mwd_manager.updateManyAndReturn({
     *   select: { mg_seq: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mwd_managerUpdateManyAndReturnArgs>(args: SelectSubset<T, mwd_managerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mwd_manager.
     * @param {mwd_managerUpsertArgs} args - Arguments to update or create a Mwd_manager.
     * @example
     * // Update or create a Mwd_manager
     * const mwd_manager = await prisma.mwd_manager.upsert({
     *   create: {
     *     // ... data to create a Mwd_manager
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mwd_manager we want to update
     *   }
     * })
     */
    upsert<T extends mwd_managerUpsertArgs>(args: SelectSubset<T, mwd_managerUpsertArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mwd_managers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_managerCountArgs} args - Arguments to filter Mwd_managers to count.
     * @example
     * // Count the number of Mwd_managers
     * const count = await prisma.mwd_manager.count({
     *   where: {
     *     // ... the filter for the Mwd_managers we want to count
     *   }
     * })
    **/
    count<T extends mwd_managerCountArgs>(
      args?: Subset<T, mwd_managerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mwd_managerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mwd_manager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mwd_managerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mwd_managerAggregateArgs>(args: Subset<T, Mwd_managerAggregateArgs>): Prisma.PrismaPromise<GetMwd_managerAggregateType<T>>

    /**
     * Group by Mwd_manager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_managerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mwd_managerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mwd_managerGroupByArgs['orderBy'] }
        : { orderBy?: mwd_managerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mwd_managerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMwd_managerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mwd_manager model
   */
  readonly fields: mwd_managerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mwd_manager.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mwd_managerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    login_logs<T extends mwd_manager$login_logsArgs<ExtArgs> = {}>(args?: Subset<T, mwd_manager$login_logsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mwd_manager model
   */
  interface mwd_managerFieldRefs {
    readonly mg_seq: FieldRef<"mwd_manager", 'Int'>
    readonly mg_email: FieldRef<"mwd_manager", 'String'>
    readonly mg_pw: FieldRef<"mwd_manager", 'String'>
    readonly mg_name: FieldRef<"mwd_manager", 'String'>
    readonly mg_use: FieldRef<"mwd_manager", 'String'>
    readonly mg_cellphone: FieldRef<"mwd_manager", 'String'>
    readonly mg_grant_manager: FieldRef<"mwd_manager", 'Int'>
    readonly mg_grant_account: FieldRef<"mwd_manager", 'Int'>
    readonly mg_grant_institute: FieldRef<"mwd_manager", 'Int'>
    readonly mg_grant_result: FieldRef<"mwd_manager", 'Int'>
    readonly mg_grant_statistic: FieldRef<"mwd_manager", 'Int'>
    readonly mg_grant_inquiry: FieldRef<"mwd_manager", 'Int'>
    readonly mg_grant_log: FieldRef<"mwd_manager", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * mwd_manager findUnique
   */
  export type mwd_managerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_manager to fetch.
     */
    where: mwd_managerWhereUniqueInput
  }

  /**
   * mwd_manager findUniqueOrThrow
   */
  export type mwd_managerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_manager to fetch.
     */
    where: mwd_managerWhereUniqueInput
  }

  /**
   * mwd_manager findFirst
   */
  export type mwd_managerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_manager to fetch.
     */
    where?: mwd_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_managers to fetch.
     */
    orderBy?: mwd_managerOrderByWithRelationInput | mwd_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mwd_managers.
     */
    cursor?: mwd_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_managers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mwd_managers.
     */
    distinct?: Mwd_managerScalarFieldEnum | Mwd_managerScalarFieldEnum[]
  }

  /**
   * mwd_manager findFirstOrThrow
   */
  export type mwd_managerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_manager to fetch.
     */
    where?: mwd_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_managers to fetch.
     */
    orderBy?: mwd_managerOrderByWithRelationInput | mwd_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mwd_managers.
     */
    cursor?: mwd_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_managers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mwd_managers.
     */
    distinct?: Mwd_managerScalarFieldEnum | Mwd_managerScalarFieldEnum[]
  }

  /**
   * mwd_manager findMany
   */
  export type mwd_managerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_managers to fetch.
     */
    where?: mwd_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_managers to fetch.
     */
    orderBy?: mwd_managerOrderByWithRelationInput | mwd_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mwd_managers.
     */
    cursor?: mwd_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_managers.
     */
    skip?: number
    distinct?: Mwd_managerScalarFieldEnum | Mwd_managerScalarFieldEnum[]
  }

  /**
   * mwd_manager create
   */
  export type mwd_managerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * The data needed to create a mwd_manager.
     */
    data: XOR<mwd_managerCreateInput, mwd_managerUncheckedCreateInput>
  }

  /**
   * mwd_manager createMany
   */
  export type mwd_managerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mwd_managers.
     */
    data: mwd_managerCreateManyInput | mwd_managerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mwd_manager createManyAndReturn
   */
  export type mwd_managerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * The data used to create many mwd_managers.
     */
    data: mwd_managerCreateManyInput | mwd_managerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mwd_manager update
   */
  export type mwd_managerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * The data needed to update a mwd_manager.
     */
    data: XOR<mwd_managerUpdateInput, mwd_managerUncheckedUpdateInput>
    /**
     * Choose, which mwd_manager to update.
     */
    where: mwd_managerWhereUniqueInput
  }

  /**
   * mwd_manager updateMany
   */
  export type mwd_managerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mwd_managers.
     */
    data: XOR<mwd_managerUpdateManyMutationInput, mwd_managerUncheckedUpdateManyInput>
    /**
     * Filter which mwd_managers to update
     */
    where?: mwd_managerWhereInput
    /**
     * Limit how many mwd_managers to update.
     */
    limit?: number
  }

  /**
   * mwd_manager updateManyAndReturn
   */
  export type mwd_managerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * The data used to update mwd_managers.
     */
    data: XOR<mwd_managerUpdateManyMutationInput, mwd_managerUncheckedUpdateManyInput>
    /**
     * Filter which mwd_managers to update
     */
    where?: mwd_managerWhereInput
    /**
     * Limit how many mwd_managers to update.
     */
    limit?: number
  }

  /**
   * mwd_manager upsert
   */
  export type mwd_managerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * The filter to search for the mwd_manager to update in case it exists.
     */
    where: mwd_managerWhereUniqueInput
    /**
     * In case the mwd_manager found by the `where` argument doesn't exist, create a new mwd_manager with this data.
     */
    create: XOR<mwd_managerCreateInput, mwd_managerUncheckedCreateInput>
    /**
     * In case the mwd_manager was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mwd_managerUpdateInput, mwd_managerUncheckedUpdateInput>
  }

  /**
   * mwd_manager delete
   */
  export type mwd_managerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
    /**
     * Filter which mwd_manager to delete.
     */
    where: mwd_managerWhereUniqueInput
  }

  /**
   * mwd_manager deleteMany
   */
  export type mwd_managerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mwd_managers to delete
     */
    where?: mwd_managerWhereInput
    /**
     * Limit how many mwd_managers to delete.
     */
    limit?: number
  }

  /**
   * mwd_manager.login_logs
   */
  export type mwd_manager$login_logsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    where?: mwd_log_login_managerWhereInput
    orderBy?: mwd_log_login_managerOrderByWithRelationInput | mwd_log_login_managerOrderByWithRelationInput[]
    cursor?: mwd_log_login_managerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mwd_log_login_managerScalarFieldEnum | Mwd_log_login_managerScalarFieldEnum[]
  }

  /**
   * mwd_manager without action
   */
  export type mwd_managerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_manager
     */
    select?: mwd_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_manager
     */
    omit?: mwd_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_managerInclude<ExtArgs> | null
  }


  /**
   * Model mwd_log_login_manager
   */

  export type AggregateMwd_log_login_manager = {
    _count: Mwd_log_login_managerCountAggregateOutputType | null
    _avg: Mwd_log_login_managerAvgAggregateOutputType | null
    _sum: Mwd_log_login_managerSumAggregateOutputType | null
    _min: Mwd_log_login_managerMinAggregateOutputType | null
    _max: Mwd_log_login_managerMaxAggregateOutputType | null
  }

  export type Mwd_log_login_managerAvgAggregateOutputType = {
    mg_seq: number | null
  }

  export type Mwd_log_login_managerSumAggregateOutputType = {
    mg_seq: number | null
  }

  export type Mwd_log_login_managerMinAggregateOutputType = {
    login_date: Date | null
    mg_seq: number | null
  }

  export type Mwd_log_login_managerMaxAggregateOutputType = {
    login_date: Date | null
    mg_seq: number | null
  }

  export type Mwd_log_login_managerCountAggregateOutputType = {
    login_date: number
    mg_seq: number
    user_agent: number
    _all: number
  }


  export type Mwd_log_login_managerAvgAggregateInputType = {
    mg_seq?: true
  }

  export type Mwd_log_login_managerSumAggregateInputType = {
    mg_seq?: true
  }

  export type Mwd_log_login_managerMinAggregateInputType = {
    login_date?: true
    mg_seq?: true
  }

  export type Mwd_log_login_managerMaxAggregateInputType = {
    login_date?: true
    mg_seq?: true
  }

  export type Mwd_log_login_managerCountAggregateInputType = {
    login_date?: true
    mg_seq?: true
    user_agent?: true
    _all?: true
  }

  export type Mwd_log_login_managerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mwd_log_login_manager to aggregate.
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_log_login_managers to fetch.
     */
    orderBy?: mwd_log_login_managerOrderByWithRelationInput | mwd_log_login_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mwd_log_login_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_log_login_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_log_login_managers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mwd_log_login_managers
    **/
    _count?: true | Mwd_log_login_managerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Mwd_log_login_managerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Mwd_log_login_managerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mwd_log_login_managerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mwd_log_login_managerMaxAggregateInputType
  }

  export type GetMwd_log_login_managerAggregateType<T extends Mwd_log_login_managerAggregateArgs> = {
        [P in keyof T & keyof AggregateMwd_log_login_manager]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMwd_log_login_manager[P]>
      : GetScalarType<T[P], AggregateMwd_log_login_manager[P]>
  }




  export type mwd_log_login_managerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mwd_log_login_managerWhereInput
    orderBy?: mwd_log_login_managerOrderByWithAggregationInput | mwd_log_login_managerOrderByWithAggregationInput[]
    by: Mwd_log_login_managerScalarFieldEnum[] | Mwd_log_login_managerScalarFieldEnum
    having?: mwd_log_login_managerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mwd_log_login_managerCountAggregateInputType | true
    _avg?: Mwd_log_login_managerAvgAggregateInputType
    _sum?: Mwd_log_login_managerSumAggregateInputType
    _min?: Mwd_log_login_managerMinAggregateInputType
    _max?: Mwd_log_login_managerMaxAggregateInputType
  }

  export type Mwd_log_login_managerGroupByOutputType = {
    login_date: Date
    mg_seq: number
    user_agent: JsonValue
    _count: Mwd_log_login_managerCountAggregateOutputType | null
    _avg: Mwd_log_login_managerAvgAggregateOutputType | null
    _sum: Mwd_log_login_managerSumAggregateOutputType | null
    _min: Mwd_log_login_managerMinAggregateOutputType | null
    _max: Mwd_log_login_managerMaxAggregateOutputType | null
  }

  type GetMwd_log_login_managerGroupByPayload<T extends mwd_log_login_managerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mwd_log_login_managerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mwd_log_login_managerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mwd_log_login_managerGroupByOutputType[P]>
            : GetScalarType<T[P], Mwd_log_login_managerGroupByOutputType[P]>
        }
      >
    >


  export type mwd_log_login_managerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    login_date?: boolean
    mg_seq?: boolean
    user_agent?: boolean
    manager?: boolean | mwd_managerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mwd_log_login_manager"]>

  export type mwd_log_login_managerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    login_date?: boolean
    mg_seq?: boolean
    user_agent?: boolean
    manager?: boolean | mwd_managerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mwd_log_login_manager"]>

  export type mwd_log_login_managerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    login_date?: boolean
    mg_seq?: boolean
    user_agent?: boolean
    manager?: boolean | mwd_managerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mwd_log_login_manager"]>

  export type mwd_log_login_managerSelectScalar = {
    login_date?: boolean
    mg_seq?: boolean
    user_agent?: boolean
  }

  export type mwd_log_login_managerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"login_date" | "mg_seq" | "user_agent", ExtArgs["result"]["mwd_log_login_manager"]>
  export type mwd_log_login_managerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    manager?: boolean | mwd_managerDefaultArgs<ExtArgs>
  }
  export type mwd_log_login_managerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    manager?: boolean | mwd_managerDefaultArgs<ExtArgs>
  }
  export type mwd_log_login_managerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    manager?: boolean | mwd_managerDefaultArgs<ExtArgs>
  }

  export type $mwd_log_login_managerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mwd_log_login_manager"
    objects: {
      manager: Prisma.$mwd_managerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      login_date: Date
      mg_seq: number
      user_agent: Prisma.JsonValue
    }, ExtArgs["result"]["mwd_log_login_manager"]>
    composites: {}
  }

  type mwd_log_login_managerGetPayload<S extends boolean | null | undefined | mwd_log_login_managerDefaultArgs> = $Result.GetResult<Prisma.$mwd_log_login_managerPayload, S>

  type mwd_log_login_managerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mwd_log_login_managerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mwd_log_login_managerCountAggregateInputType | true
    }

  export interface mwd_log_login_managerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mwd_log_login_manager'], meta: { name: 'mwd_log_login_manager' } }
    /**
     * Find zero or one Mwd_log_login_manager that matches the filter.
     * @param {mwd_log_login_managerFindUniqueArgs} args - Arguments to find a Mwd_log_login_manager
     * @example
     * // Get one Mwd_log_login_manager
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mwd_log_login_managerFindUniqueArgs>(args: SelectSubset<T, mwd_log_login_managerFindUniqueArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mwd_log_login_manager that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mwd_log_login_managerFindUniqueOrThrowArgs} args - Arguments to find a Mwd_log_login_manager
     * @example
     * // Get one Mwd_log_login_manager
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mwd_log_login_managerFindUniqueOrThrowArgs>(args: SelectSubset<T, mwd_log_login_managerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mwd_log_login_manager that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_log_login_managerFindFirstArgs} args - Arguments to find a Mwd_log_login_manager
     * @example
     * // Get one Mwd_log_login_manager
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mwd_log_login_managerFindFirstArgs>(args?: SelectSubset<T, mwd_log_login_managerFindFirstArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mwd_log_login_manager that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_log_login_managerFindFirstOrThrowArgs} args - Arguments to find a Mwd_log_login_manager
     * @example
     * // Get one Mwd_log_login_manager
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mwd_log_login_managerFindFirstOrThrowArgs>(args?: SelectSubset<T, mwd_log_login_managerFindFirstOrThrowArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mwd_log_login_managers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_log_login_managerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mwd_log_login_managers
     * const mwd_log_login_managers = await prisma.mwd_log_login_manager.findMany()
     * 
     * // Get first 10 Mwd_log_login_managers
     * const mwd_log_login_managers = await prisma.mwd_log_login_manager.findMany({ take: 10 })
     * 
     * // Only select the `login_date`
     * const mwd_log_login_managerWithLogin_dateOnly = await prisma.mwd_log_login_manager.findMany({ select: { login_date: true } })
     * 
     */
    findMany<T extends mwd_log_login_managerFindManyArgs>(args?: SelectSubset<T, mwd_log_login_managerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mwd_log_login_manager.
     * @param {mwd_log_login_managerCreateArgs} args - Arguments to create a Mwd_log_login_manager.
     * @example
     * // Create one Mwd_log_login_manager
     * const Mwd_log_login_manager = await prisma.mwd_log_login_manager.create({
     *   data: {
     *     // ... data to create a Mwd_log_login_manager
     *   }
     * })
     * 
     */
    create<T extends mwd_log_login_managerCreateArgs>(args: SelectSubset<T, mwd_log_login_managerCreateArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mwd_log_login_managers.
     * @param {mwd_log_login_managerCreateManyArgs} args - Arguments to create many Mwd_log_login_managers.
     * @example
     * // Create many Mwd_log_login_managers
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mwd_log_login_managerCreateManyArgs>(args?: SelectSubset<T, mwd_log_login_managerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mwd_log_login_managers and returns the data saved in the database.
     * @param {mwd_log_login_managerCreateManyAndReturnArgs} args - Arguments to create many Mwd_log_login_managers.
     * @example
     * // Create many Mwd_log_login_managers
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mwd_log_login_managers and only return the `login_date`
     * const mwd_log_login_managerWithLogin_dateOnly = await prisma.mwd_log_login_manager.createManyAndReturn({
     *   select: { login_date: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mwd_log_login_managerCreateManyAndReturnArgs>(args?: SelectSubset<T, mwd_log_login_managerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mwd_log_login_manager.
     * @param {mwd_log_login_managerDeleteArgs} args - Arguments to delete one Mwd_log_login_manager.
     * @example
     * // Delete one Mwd_log_login_manager
     * const Mwd_log_login_manager = await prisma.mwd_log_login_manager.delete({
     *   where: {
     *     // ... filter to delete one Mwd_log_login_manager
     *   }
     * })
     * 
     */
    delete<T extends mwd_log_login_managerDeleteArgs>(args: SelectSubset<T, mwd_log_login_managerDeleteArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mwd_log_login_manager.
     * @param {mwd_log_login_managerUpdateArgs} args - Arguments to update one Mwd_log_login_manager.
     * @example
     * // Update one Mwd_log_login_manager
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mwd_log_login_managerUpdateArgs>(args: SelectSubset<T, mwd_log_login_managerUpdateArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mwd_log_login_managers.
     * @param {mwd_log_login_managerDeleteManyArgs} args - Arguments to filter Mwd_log_login_managers to delete.
     * @example
     * // Delete a few Mwd_log_login_managers
     * const { count } = await prisma.mwd_log_login_manager.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mwd_log_login_managerDeleteManyArgs>(args?: SelectSubset<T, mwd_log_login_managerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mwd_log_login_managers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_log_login_managerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mwd_log_login_managers
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mwd_log_login_managerUpdateManyArgs>(args: SelectSubset<T, mwd_log_login_managerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mwd_log_login_managers and returns the data updated in the database.
     * @param {mwd_log_login_managerUpdateManyAndReturnArgs} args - Arguments to update many Mwd_log_login_managers.
     * @example
     * // Update many Mwd_log_login_managers
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mwd_log_login_managers and only return the `login_date`
     * const mwd_log_login_managerWithLogin_dateOnly = await prisma.mwd_log_login_manager.updateManyAndReturn({
     *   select: { login_date: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mwd_log_login_managerUpdateManyAndReturnArgs>(args: SelectSubset<T, mwd_log_login_managerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mwd_log_login_manager.
     * @param {mwd_log_login_managerUpsertArgs} args - Arguments to update or create a Mwd_log_login_manager.
     * @example
     * // Update or create a Mwd_log_login_manager
     * const mwd_log_login_manager = await prisma.mwd_log_login_manager.upsert({
     *   create: {
     *     // ... data to create a Mwd_log_login_manager
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mwd_log_login_manager we want to update
     *   }
     * })
     */
    upsert<T extends mwd_log_login_managerUpsertArgs>(args: SelectSubset<T, mwd_log_login_managerUpsertArgs<ExtArgs>>): Prisma__mwd_log_login_managerClient<$Result.GetResult<Prisma.$mwd_log_login_managerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mwd_log_login_managers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_log_login_managerCountArgs} args - Arguments to filter Mwd_log_login_managers to count.
     * @example
     * // Count the number of Mwd_log_login_managers
     * const count = await prisma.mwd_log_login_manager.count({
     *   where: {
     *     // ... the filter for the Mwd_log_login_managers we want to count
     *   }
     * })
    **/
    count<T extends mwd_log_login_managerCountArgs>(
      args?: Subset<T, mwd_log_login_managerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mwd_log_login_managerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mwd_log_login_manager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mwd_log_login_managerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mwd_log_login_managerAggregateArgs>(args: Subset<T, Mwd_log_login_managerAggregateArgs>): Prisma.PrismaPromise<GetMwd_log_login_managerAggregateType<T>>

    /**
     * Group by Mwd_log_login_manager.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mwd_log_login_managerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mwd_log_login_managerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mwd_log_login_managerGroupByArgs['orderBy'] }
        : { orderBy?: mwd_log_login_managerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mwd_log_login_managerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMwd_log_login_managerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mwd_log_login_manager model
   */
  readonly fields: mwd_log_login_managerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mwd_log_login_manager.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mwd_log_login_managerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    manager<T extends mwd_managerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, mwd_managerDefaultArgs<ExtArgs>>): Prisma__mwd_managerClient<$Result.GetResult<Prisma.$mwd_managerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mwd_log_login_manager model
   */
  interface mwd_log_login_managerFieldRefs {
    readonly login_date: FieldRef<"mwd_log_login_manager", 'DateTime'>
    readonly mg_seq: FieldRef<"mwd_log_login_manager", 'Int'>
    readonly user_agent: FieldRef<"mwd_log_login_manager", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * mwd_log_login_manager findUnique
   */
  export type mwd_log_login_managerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_log_login_manager to fetch.
     */
    where: mwd_log_login_managerWhereUniqueInput
  }

  /**
   * mwd_log_login_manager findUniqueOrThrow
   */
  export type mwd_log_login_managerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_log_login_manager to fetch.
     */
    where: mwd_log_login_managerWhereUniqueInput
  }

  /**
   * mwd_log_login_manager findFirst
   */
  export type mwd_log_login_managerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_log_login_manager to fetch.
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_log_login_managers to fetch.
     */
    orderBy?: mwd_log_login_managerOrderByWithRelationInput | mwd_log_login_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mwd_log_login_managers.
     */
    cursor?: mwd_log_login_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_log_login_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_log_login_managers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mwd_log_login_managers.
     */
    distinct?: Mwd_log_login_managerScalarFieldEnum | Mwd_log_login_managerScalarFieldEnum[]
  }

  /**
   * mwd_log_login_manager findFirstOrThrow
   */
  export type mwd_log_login_managerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_log_login_manager to fetch.
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_log_login_managers to fetch.
     */
    orderBy?: mwd_log_login_managerOrderByWithRelationInput | mwd_log_login_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mwd_log_login_managers.
     */
    cursor?: mwd_log_login_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_log_login_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_log_login_managers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mwd_log_login_managers.
     */
    distinct?: Mwd_log_login_managerScalarFieldEnum | Mwd_log_login_managerScalarFieldEnum[]
  }

  /**
   * mwd_log_login_manager findMany
   */
  export type mwd_log_login_managerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * Filter, which mwd_log_login_managers to fetch.
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mwd_log_login_managers to fetch.
     */
    orderBy?: mwd_log_login_managerOrderByWithRelationInput | mwd_log_login_managerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mwd_log_login_managers.
     */
    cursor?: mwd_log_login_managerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mwd_log_login_managers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mwd_log_login_managers.
     */
    skip?: number
    distinct?: Mwd_log_login_managerScalarFieldEnum | Mwd_log_login_managerScalarFieldEnum[]
  }

  /**
   * mwd_log_login_manager create
   */
  export type mwd_log_login_managerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * The data needed to create a mwd_log_login_manager.
     */
    data: XOR<mwd_log_login_managerCreateInput, mwd_log_login_managerUncheckedCreateInput>
  }

  /**
   * mwd_log_login_manager createMany
   */
  export type mwd_log_login_managerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mwd_log_login_managers.
     */
    data: mwd_log_login_managerCreateManyInput | mwd_log_login_managerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mwd_log_login_manager createManyAndReturn
   */
  export type mwd_log_login_managerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * The data used to create many mwd_log_login_managers.
     */
    data: mwd_log_login_managerCreateManyInput | mwd_log_login_managerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mwd_log_login_manager update
   */
  export type mwd_log_login_managerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * The data needed to update a mwd_log_login_manager.
     */
    data: XOR<mwd_log_login_managerUpdateInput, mwd_log_login_managerUncheckedUpdateInput>
    /**
     * Choose, which mwd_log_login_manager to update.
     */
    where: mwd_log_login_managerWhereUniqueInput
  }

  /**
   * mwd_log_login_manager updateMany
   */
  export type mwd_log_login_managerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mwd_log_login_managers.
     */
    data: XOR<mwd_log_login_managerUpdateManyMutationInput, mwd_log_login_managerUncheckedUpdateManyInput>
    /**
     * Filter which mwd_log_login_managers to update
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * Limit how many mwd_log_login_managers to update.
     */
    limit?: number
  }

  /**
   * mwd_log_login_manager updateManyAndReturn
   */
  export type mwd_log_login_managerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * The data used to update mwd_log_login_managers.
     */
    data: XOR<mwd_log_login_managerUpdateManyMutationInput, mwd_log_login_managerUncheckedUpdateManyInput>
    /**
     * Filter which mwd_log_login_managers to update
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * Limit how many mwd_log_login_managers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mwd_log_login_manager upsert
   */
  export type mwd_log_login_managerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * The filter to search for the mwd_log_login_manager to update in case it exists.
     */
    where: mwd_log_login_managerWhereUniqueInput
    /**
     * In case the mwd_log_login_manager found by the `where` argument doesn't exist, create a new mwd_log_login_manager with this data.
     */
    create: XOR<mwd_log_login_managerCreateInput, mwd_log_login_managerUncheckedCreateInput>
    /**
     * In case the mwd_log_login_manager was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mwd_log_login_managerUpdateInput, mwd_log_login_managerUncheckedUpdateInput>
  }

  /**
   * mwd_log_login_manager delete
   */
  export type mwd_log_login_managerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
    /**
     * Filter which mwd_log_login_manager to delete.
     */
    where: mwd_log_login_managerWhereUniqueInput
  }

  /**
   * mwd_log_login_manager deleteMany
   */
  export type mwd_log_login_managerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mwd_log_login_managers to delete
     */
    where?: mwd_log_login_managerWhereInput
    /**
     * Limit how many mwd_log_login_managers to delete.
     */
    limit?: number
  }

  /**
   * mwd_log_login_manager without action
   */
  export type mwd_log_login_managerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mwd_log_login_manager
     */
    select?: mwd_log_login_managerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mwd_log_login_manager
     */
    omit?: mwd_log_login_managerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mwd_log_login_managerInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Mwd_managerScalarFieldEnum: {
    mg_seq: 'mg_seq',
    mg_email: 'mg_email',
    mg_pw: 'mg_pw',
    mg_name: 'mg_name',
    mg_use: 'mg_use',
    mg_cellphone: 'mg_cellphone',
    mg_grant_manager: 'mg_grant_manager',
    mg_grant_account: 'mg_grant_account',
    mg_grant_institute: 'mg_grant_institute',
    mg_grant_result: 'mg_grant_result',
    mg_grant_statistic: 'mg_grant_statistic',
    mg_grant_inquiry: 'mg_grant_inquiry',
    mg_grant_log: 'mg_grant_log'
  };

  export type Mwd_managerScalarFieldEnum = (typeof Mwd_managerScalarFieldEnum)[keyof typeof Mwd_managerScalarFieldEnum]


  export const Mwd_log_login_managerScalarFieldEnum: {
    login_date: 'login_date',
    mg_seq: 'mg_seq',
    user_agent: 'user_agent'
  };

  export type Mwd_log_login_managerScalarFieldEnum = (typeof Mwd_log_login_managerScalarFieldEnum)[keyof typeof Mwd_log_login_managerScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type mwd_managerWhereInput = {
    AND?: mwd_managerWhereInput | mwd_managerWhereInput[]
    OR?: mwd_managerWhereInput[]
    NOT?: mwd_managerWhereInput | mwd_managerWhereInput[]
    mg_seq?: IntFilter<"mwd_manager"> | number
    mg_email?: StringFilter<"mwd_manager"> | string
    mg_pw?: StringFilter<"mwd_manager"> | string
    mg_name?: StringFilter<"mwd_manager"> | string
    mg_use?: StringFilter<"mwd_manager"> | string
    mg_cellphone?: StringFilter<"mwd_manager"> | string
    mg_grant_manager?: IntFilter<"mwd_manager"> | number
    mg_grant_account?: IntFilter<"mwd_manager"> | number
    mg_grant_institute?: IntFilter<"mwd_manager"> | number
    mg_grant_result?: IntFilter<"mwd_manager"> | number
    mg_grant_statistic?: IntFilter<"mwd_manager"> | number
    mg_grant_inquiry?: IntFilter<"mwd_manager"> | number
    mg_grant_log?: IntFilter<"mwd_manager"> | number
    login_logs?: Mwd_log_login_managerListRelationFilter
  }

  export type mwd_managerOrderByWithRelationInput = {
    mg_seq?: SortOrder
    mg_email?: SortOrder
    mg_pw?: SortOrder
    mg_name?: SortOrder
    mg_use?: SortOrder
    mg_cellphone?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
    login_logs?: mwd_log_login_managerOrderByRelationAggregateInput
  }

  export type mwd_managerWhereUniqueInput = Prisma.AtLeast<{
    mg_seq?: number
    mg_email?: string
    AND?: mwd_managerWhereInput | mwd_managerWhereInput[]
    OR?: mwd_managerWhereInput[]
    NOT?: mwd_managerWhereInput | mwd_managerWhereInput[]
    mg_pw?: StringFilter<"mwd_manager"> | string
    mg_name?: StringFilter<"mwd_manager"> | string
    mg_use?: StringFilter<"mwd_manager"> | string
    mg_cellphone?: StringFilter<"mwd_manager"> | string
    mg_grant_manager?: IntFilter<"mwd_manager"> | number
    mg_grant_account?: IntFilter<"mwd_manager"> | number
    mg_grant_institute?: IntFilter<"mwd_manager"> | number
    mg_grant_result?: IntFilter<"mwd_manager"> | number
    mg_grant_statistic?: IntFilter<"mwd_manager"> | number
    mg_grant_inquiry?: IntFilter<"mwd_manager"> | number
    mg_grant_log?: IntFilter<"mwd_manager"> | number
    login_logs?: Mwd_log_login_managerListRelationFilter
  }, "mg_seq" | "mg_email">

  export type mwd_managerOrderByWithAggregationInput = {
    mg_seq?: SortOrder
    mg_email?: SortOrder
    mg_pw?: SortOrder
    mg_name?: SortOrder
    mg_use?: SortOrder
    mg_cellphone?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
    _count?: mwd_managerCountOrderByAggregateInput
    _avg?: mwd_managerAvgOrderByAggregateInput
    _max?: mwd_managerMaxOrderByAggregateInput
    _min?: mwd_managerMinOrderByAggregateInput
    _sum?: mwd_managerSumOrderByAggregateInput
  }

  export type mwd_managerScalarWhereWithAggregatesInput = {
    AND?: mwd_managerScalarWhereWithAggregatesInput | mwd_managerScalarWhereWithAggregatesInput[]
    OR?: mwd_managerScalarWhereWithAggregatesInput[]
    NOT?: mwd_managerScalarWhereWithAggregatesInput | mwd_managerScalarWhereWithAggregatesInput[]
    mg_seq?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_email?: StringWithAggregatesFilter<"mwd_manager"> | string
    mg_pw?: StringWithAggregatesFilter<"mwd_manager"> | string
    mg_name?: StringWithAggregatesFilter<"mwd_manager"> | string
    mg_use?: StringWithAggregatesFilter<"mwd_manager"> | string
    mg_cellphone?: StringWithAggregatesFilter<"mwd_manager"> | string
    mg_grant_manager?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_grant_account?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_grant_institute?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_grant_result?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_grant_statistic?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_grant_inquiry?: IntWithAggregatesFilter<"mwd_manager"> | number
    mg_grant_log?: IntWithAggregatesFilter<"mwd_manager"> | number
  }

  export type mwd_log_login_managerWhereInput = {
    AND?: mwd_log_login_managerWhereInput | mwd_log_login_managerWhereInput[]
    OR?: mwd_log_login_managerWhereInput[]
    NOT?: mwd_log_login_managerWhereInput | mwd_log_login_managerWhereInput[]
    login_date?: DateTimeFilter<"mwd_log_login_manager"> | Date | string
    mg_seq?: IntFilter<"mwd_log_login_manager"> | number
    user_agent?: JsonFilter<"mwd_log_login_manager">
    manager?: XOR<Mwd_managerScalarRelationFilter, mwd_managerWhereInput>
  }

  export type mwd_log_login_managerOrderByWithRelationInput = {
    login_date?: SortOrder
    mg_seq?: SortOrder
    user_agent?: SortOrder
    manager?: mwd_managerOrderByWithRelationInput
  }

  export type mwd_log_login_managerWhereUniqueInput = Prisma.AtLeast<{
    login_date_mg_seq?: mwd_log_login_managerLogin_dateMg_seqCompoundUniqueInput
    AND?: mwd_log_login_managerWhereInput | mwd_log_login_managerWhereInput[]
    OR?: mwd_log_login_managerWhereInput[]
    NOT?: mwd_log_login_managerWhereInput | mwd_log_login_managerWhereInput[]
    login_date?: DateTimeFilter<"mwd_log_login_manager"> | Date | string
    mg_seq?: IntFilter<"mwd_log_login_manager"> | number
    user_agent?: JsonFilter<"mwd_log_login_manager">
    manager?: XOR<Mwd_managerScalarRelationFilter, mwd_managerWhereInput>
  }, "login_date_mg_seq">

  export type mwd_log_login_managerOrderByWithAggregationInput = {
    login_date?: SortOrder
    mg_seq?: SortOrder
    user_agent?: SortOrder
    _count?: mwd_log_login_managerCountOrderByAggregateInput
    _avg?: mwd_log_login_managerAvgOrderByAggregateInput
    _max?: mwd_log_login_managerMaxOrderByAggregateInput
    _min?: mwd_log_login_managerMinOrderByAggregateInput
    _sum?: mwd_log_login_managerSumOrderByAggregateInput
  }

  export type mwd_log_login_managerScalarWhereWithAggregatesInput = {
    AND?: mwd_log_login_managerScalarWhereWithAggregatesInput | mwd_log_login_managerScalarWhereWithAggregatesInput[]
    OR?: mwd_log_login_managerScalarWhereWithAggregatesInput[]
    NOT?: mwd_log_login_managerScalarWhereWithAggregatesInput | mwd_log_login_managerScalarWhereWithAggregatesInput[]
    login_date?: DateTimeWithAggregatesFilter<"mwd_log_login_manager"> | Date | string
    mg_seq?: IntWithAggregatesFilter<"mwd_log_login_manager"> | number
    user_agent?: JsonWithAggregatesFilter<"mwd_log_login_manager">
  }

  export type mwd_managerCreateInput = {
    mg_seq: number
    mg_email: string
    mg_pw: string
    mg_name: string
    mg_use: string
    mg_cellphone: string
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
    login_logs?: mwd_log_login_managerCreateNestedManyWithoutManagerInput
  }

  export type mwd_managerUncheckedCreateInput = {
    mg_seq: number
    mg_email: string
    mg_pw: string
    mg_name: string
    mg_use: string
    mg_cellphone: string
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
    login_logs?: mwd_log_login_managerUncheckedCreateNestedManyWithoutManagerInput
  }

  export type mwd_managerUpdateInput = {
    mg_seq?: IntFieldUpdateOperationsInput | number
    mg_email?: StringFieldUpdateOperationsInput | string
    mg_pw?: StringFieldUpdateOperationsInput | string
    mg_name?: StringFieldUpdateOperationsInput | string
    mg_use?: StringFieldUpdateOperationsInput | string
    mg_cellphone?: StringFieldUpdateOperationsInput | string
    mg_grant_manager?: IntFieldUpdateOperationsInput | number
    mg_grant_account?: IntFieldUpdateOperationsInput | number
    mg_grant_institute?: IntFieldUpdateOperationsInput | number
    mg_grant_result?: IntFieldUpdateOperationsInput | number
    mg_grant_statistic?: IntFieldUpdateOperationsInput | number
    mg_grant_inquiry?: IntFieldUpdateOperationsInput | number
    mg_grant_log?: IntFieldUpdateOperationsInput | number
    login_logs?: mwd_log_login_managerUpdateManyWithoutManagerNestedInput
  }

  export type mwd_managerUncheckedUpdateInput = {
    mg_seq?: IntFieldUpdateOperationsInput | number
    mg_email?: StringFieldUpdateOperationsInput | string
    mg_pw?: StringFieldUpdateOperationsInput | string
    mg_name?: StringFieldUpdateOperationsInput | string
    mg_use?: StringFieldUpdateOperationsInput | string
    mg_cellphone?: StringFieldUpdateOperationsInput | string
    mg_grant_manager?: IntFieldUpdateOperationsInput | number
    mg_grant_account?: IntFieldUpdateOperationsInput | number
    mg_grant_institute?: IntFieldUpdateOperationsInput | number
    mg_grant_result?: IntFieldUpdateOperationsInput | number
    mg_grant_statistic?: IntFieldUpdateOperationsInput | number
    mg_grant_inquiry?: IntFieldUpdateOperationsInput | number
    mg_grant_log?: IntFieldUpdateOperationsInput | number
    login_logs?: mwd_log_login_managerUncheckedUpdateManyWithoutManagerNestedInput
  }

  export type mwd_managerCreateManyInput = {
    mg_seq: number
    mg_email: string
    mg_pw: string
    mg_name: string
    mg_use: string
    mg_cellphone: string
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
  }

  export type mwd_managerUpdateManyMutationInput = {
    mg_seq?: IntFieldUpdateOperationsInput | number
    mg_email?: StringFieldUpdateOperationsInput | string
    mg_pw?: StringFieldUpdateOperationsInput | string
    mg_name?: StringFieldUpdateOperationsInput | string
    mg_use?: StringFieldUpdateOperationsInput | string
    mg_cellphone?: StringFieldUpdateOperationsInput | string
    mg_grant_manager?: IntFieldUpdateOperationsInput | number
    mg_grant_account?: IntFieldUpdateOperationsInput | number
    mg_grant_institute?: IntFieldUpdateOperationsInput | number
    mg_grant_result?: IntFieldUpdateOperationsInput | number
    mg_grant_statistic?: IntFieldUpdateOperationsInput | number
    mg_grant_inquiry?: IntFieldUpdateOperationsInput | number
    mg_grant_log?: IntFieldUpdateOperationsInput | number
  }

  export type mwd_managerUncheckedUpdateManyInput = {
    mg_seq?: IntFieldUpdateOperationsInput | number
    mg_email?: StringFieldUpdateOperationsInput | string
    mg_pw?: StringFieldUpdateOperationsInput | string
    mg_name?: StringFieldUpdateOperationsInput | string
    mg_use?: StringFieldUpdateOperationsInput | string
    mg_cellphone?: StringFieldUpdateOperationsInput | string
    mg_grant_manager?: IntFieldUpdateOperationsInput | number
    mg_grant_account?: IntFieldUpdateOperationsInput | number
    mg_grant_institute?: IntFieldUpdateOperationsInput | number
    mg_grant_result?: IntFieldUpdateOperationsInput | number
    mg_grant_statistic?: IntFieldUpdateOperationsInput | number
    mg_grant_inquiry?: IntFieldUpdateOperationsInput | number
    mg_grant_log?: IntFieldUpdateOperationsInput | number
  }

  export type mwd_log_login_managerCreateInput = {
    login_date: Date | string
    user_agent: JsonNullValueInput | InputJsonValue
    manager: mwd_managerCreateNestedOneWithoutLogin_logsInput
  }

  export type mwd_log_login_managerUncheckedCreateInput = {
    login_date: Date | string
    mg_seq: number
    user_agent: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUpdateInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_agent?: JsonNullValueInput | InputJsonValue
    manager?: mwd_managerUpdateOneRequiredWithoutLogin_logsNestedInput
  }

  export type mwd_log_login_managerUncheckedUpdateInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    mg_seq?: IntFieldUpdateOperationsInput | number
    user_agent?: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerCreateManyInput = {
    login_date: Date | string
    mg_seq: number
    user_agent: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUpdateManyMutationInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_agent?: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUncheckedUpdateManyInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    mg_seq?: IntFieldUpdateOperationsInput | number
    user_agent?: JsonNullValueInput | InputJsonValue
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Mwd_log_login_managerListRelationFilter = {
    every?: mwd_log_login_managerWhereInput
    some?: mwd_log_login_managerWhereInput
    none?: mwd_log_login_managerWhereInput
  }

  export type mwd_log_login_managerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mwd_managerCountOrderByAggregateInput = {
    mg_seq?: SortOrder
    mg_email?: SortOrder
    mg_pw?: SortOrder
    mg_name?: SortOrder
    mg_use?: SortOrder
    mg_cellphone?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
  }

  export type mwd_managerAvgOrderByAggregateInput = {
    mg_seq?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
  }

  export type mwd_managerMaxOrderByAggregateInput = {
    mg_seq?: SortOrder
    mg_email?: SortOrder
    mg_pw?: SortOrder
    mg_name?: SortOrder
    mg_use?: SortOrder
    mg_cellphone?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
  }

  export type mwd_managerMinOrderByAggregateInput = {
    mg_seq?: SortOrder
    mg_email?: SortOrder
    mg_pw?: SortOrder
    mg_name?: SortOrder
    mg_use?: SortOrder
    mg_cellphone?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
  }

  export type mwd_managerSumOrderByAggregateInput = {
    mg_seq?: SortOrder
    mg_grant_manager?: SortOrder
    mg_grant_account?: SortOrder
    mg_grant_institute?: SortOrder
    mg_grant_result?: SortOrder
    mg_grant_statistic?: SortOrder
    mg_grant_inquiry?: SortOrder
    mg_grant_log?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type Mwd_managerScalarRelationFilter = {
    is?: mwd_managerWhereInput
    isNot?: mwd_managerWhereInput
  }

  export type mwd_log_login_managerLogin_dateMg_seqCompoundUniqueInput = {
    login_date: Date | string
    mg_seq: number
  }

  export type mwd_log_login_managerCountOrderByAggregateInput = {
    login_date?: SortOrder
    mg_seq?: SortOrder
    user_agent?: SortOrder
  }

  export type mwd_log_login_managerAvgOrderByAggregateInput = {
    mg_seq?: SortOrder
  }

  export type mwd_log_login_managerMaxOrderByAggregateInput = {
    login_date?: SortOrder
    mg_seq?: SortOrder
  }

  export type mwd_log_login_managerMinOrderByAggregateInput = {
    login_date?: SortOrder
    mg_seq?: SortOrder
  }

  export type mwd_log_login_managerSumOrderByAggregateInput = {
    mg_seq?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type mwd_log_login_managerCreateNestedManyWithoutManagerInput = {
    create?: XOR<mwd_log_login_managerCreateWithoutManagerInput, mwd_log_login_managerUncheckedCreateWithoutManagerInput> | mwd_log_login_managerCreateWithoutManagerInput[] | mwd_log_login_managerUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: mwd_log_login_managerCreateOrConnectWithoutManagerInput | mwd_log_login_managerCreateOrConnectWithoutManagerInput[]
    createMany?: mwd_log_login_managerCreateManyManagerInputEnvelope
    connect?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
  }

  export type mwd_log_login_managerUncheckedCreateNestedManyWithoutManagerInput = {
    create?: XOR<mwd_log_login_managerCreateWithoutManagerInput, mwd_log_login_managerUncheckedCreateWithoutManagerInput> | mwd_log_login_managerCreateWithoutManagerInput[] | mwd_log_login_managerUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: mwd_log_login_managerCreateOrConnectWithoutManagerInput | mwd_log_login_managerCreateOrConnectWithoutManagerInput[]
    createMany?: mwd_log_login_managerCreateManyManagerInputEnvelope
    connect?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type mwd_log_login_managerUpdateManyWithoutManagerNestedInput = {
    create?: XOR<mwd_log_login_managerCreateWithoutManagerInput, mwd_log_login_managerUncheckedCreateWithoutManagerInput> | mwd_log_login_managerCreateWithoutManagerInput[] | mwd_log_login_managerUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: mwd_log_login_managerCreateOrConnectWithoutManagerInput | mwd_log_login_managerCreateOrConnectWithoutManagerInput[]
    upsert?: mwd_log_login_managerUpsertWithWhereUniqueWithoutManagerInput | mwd_log_login_managerUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: mwd_log_login_managerCreateManyManagerInputEnvelope
    set?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    disconnect?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    delete?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    connect?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    update?: mwd_log_login_managerUpdateWithWhereUniqueWithoutManagerInput | mwd_log_login_managerUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: mwd_log_login_managerUpdateManyWithWhereWithoutManagerInput | mwd_log_login_managerUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: mwd_log_login_managerScalarWhereInput | mwd_log_login_managerScalarWhereInput[]
  }

  export type mwd_log_login_managerUncheckedUpdateManyWithoutManagerNestedInput = {
    create?: XOR<mwd_log_login_managerCreateWithoutManagerInput, mwd_log_login_managerUncheckedCreateWithoutManagerInput> | mwd_log_login_managerCreateWithoutManagerInput[] | mwd_log_login_managerUncheckedCreateWithoutManagerInput[]
    connectOrCreate?: mwd_log_login_managerCreateOrConnectWithoutManagerInput | mwd_log_login_managerCreateOrConnectWithoutManagerInput[]
    upsert?: mwd_log_login_managerUpsertWithWhereUniqueWithoutManagerInput | mwd_log_login_managerUpsertWithWhereUniqueWithoutManagerInput[]
    createMany?: mwd_log_login_managerCreateManyManagerInputEnvelope
    set?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    disconnect?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    delete?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    connect?: mwd_log_login_managerWhereUniqueInput | mwd_log_login_managerWhereUniqueInput[]
    update?: mwd_log_login_managerUpdateWithWhereUniqueWithoutManagerInput | mwd_log_login_managerUpdateWithWhereUniqueWithoutManagerInput[]
    updateMany?: mwd_log_login_managerUpdateManyWithWhereWithoutManagerInput | mwd_log_login_managerUpdateManyWithWhereWithoutManagerInput[]
    deleteMany?: mwd_log_login_managerScalarWhereInput | mwd_log_login_managerScalarWhereInput[]
  }

  export type mwd_managerCreateNestedOneWithoutLogin_logsInput = {
    create?: XOR<mwd_managerCreateWithoutLogin_logsInput, mwd_managerUncheckedCreateWithoutLogin_logsInput>
    connectOrCreate?: mwd_managerCreateOrConnectWithoutLogin_logsInput
    connect?: mwd_managerWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type mwd_managerUpdateOneRequiredWithoutLogin_logsNestedInput = {
    create?: XOR<mwd_managerCreateWithoutLogin_logsInput, mwd_managerUncheckedCreateWithoutLogin_logsInput>
    connectOrCreate?: mwd_managerCreateOrConnectWithoutLogin_logsInput
    upsert?: mwd_managerUpsertWithoutLogin_logsInput
    connect?: mwd_managerWhereUniqueInput
    update?: XOR<XOR<mwd_managerUpdateToOneWithWhereWithoutLogin_logsInput, mwd_managerUpdateWithoutLogin_logsInput>, mwd_managerUncheckedUpdateWithoutLogin_logsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type mwd_log_login_managerCreateWithoutManagerInput = {
    login_date: Date | string
    user_agent: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUncheckedCreateWithoutManagerInput = {
    login_date: Date | string
    user_agent: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerCreateOrConnectWithoutManagerInput = {
    where: mwd_log_login_managerWhereUniqueInput
    create: XOR<mwd_log_login_managerCreateWithoutManagerInput, mwd_log_login_managerUncheckedCreateWithoutManagerInput>
  }

  export type mwd_log_login_managerCreateManyManagerInputEnvelope = {
    data: mwd_log_login_managerCreateManyManagerInput | mwd_log_login_managerCreateManyManagerInput[]
    skipDuplicates?: boolean
  }

  export type mwd_log_login_managerUpsertWithWhereUniqueWithoutManagerInput = {
    where: mwd_log_login_managerWhereUniqueInput
    update: XOR<mwd_log_login_managerUpdateWithoutManagerInput, mwd_log_login_managerUncheckedUpdateWithoutManagerInput>
    create: XOR<mwd_log_login_managerCreateWithoutManagerInput, mwd_log_login_managerUncheckedCreateWithoutManagerInput>
  }

  export type mwd_log_login_managerUpdateWithWhereUniqueWithoutManagerInput = {
    where: mwd_log_login_managerWhereUniqueInput
    data: XOR<mwd_log_login_managerUpdateWithoutManagerInput, mwd_log_login_managerUncheckedUpdateWithoutManagerInput>
  }

  export type mwd_log_login_managerUpdateManyWithWhereWithoutManagerInput = {
    where: mwd_log_login_managerScalarWhereInput
    data: XOR<mwd_log_login_managerUpdateManyMutationInput, mwd_log_login_managerUncheckedUpdateManyWithoutManagerInput>
  }

  export type mwd_log_login_managerScalarWhereInput = {
    AND?: mwd_log_login_managerScalarWhereInput | mwd_log_login_managerScalarWhereInput[]
    OR?: mwd_log_login_managerScalarWhereInput[]
    NOT?: mwd_log_login_managerScalarWhereInput | mwd_log_login_managerScalarWhereInput[]
    login_date?: DateTimeFilter<"mwd_log_login_manager"> | Date | string
    mg_seq?: IntFilter<"mwd_log_login_manager"> | number
    user_agent?: JsonFilter<"mwd_log_login_manager">
  }

  export type mwd_managerCreateWithoutLogin_logsInput = {
    mg_seq: number
    mg_email: string
    mg_pw: string
    mg_name: string
    mg_use: string
    mg_cellphone: string
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
  }

  export type mwd_managerUncheckedCreateWithoutLogin_logsInput = {
    mg_seq: number
    mg_email: string
    mg_pw: string
    mg_name: string
    mg_use: string
    mg_cellphone: string
    mg_grant_manager: number
    mg_grant_account: number
    mg_grant_institute: number
    mg_grant_result: number
    mg_grant_statistic: number
    mg_grant_inquiry: number
    mg_grant_log: number
  }

  export type mwd_managerCreateOrConnectWithoutLogin_logsInput = {
    where: mwd_managerWhereUniqueInput
    create: XOR<mwd_managerCreateWithoutLogin_logsInput, mwd_managerUncheckedCreateWithoutLogin_logsInput>
  }

  export type mwd_managerUpsertWithoutLogin_logsInput = {
    update: XOR<mwd_managerUpdateWithoutLogin_logsInput, mwd_managerUncheckedUpdateWithoutLogin_logsInput>
    create: XOR<mwd_managerCreateWithoutLogin_logsInput, mwd_managerUncheckedCreateWithoutLogin_logsInput>
    where?: mwd_managerWhereInput
  }

  export type mwd_managerUpdateToOneWithWhereWithoutLogin_logsInput = {
    where?: mwd_managerWhereInput
    data: XOR<mwd_managerUpdateWithoutLogin_logsInput, mwd_managerUncheckedUpdateWithoutLogin_logsInput>
  }

  export type mwd_managerUpdateWithoutLogin_logsInput = {
    mg_seq?: IntFieldUpdateOperationsInput | number
    mg_email?: StringFieldUpdateOperationsInput | string
    mg_pw?: StringFieldUpdateOperationsInput | string
    mg_name?: StringFieldUpdateOperationsInput | string
    mg_use?: StringFieldUpdateOperationsInput | string
    mg_cellphone?: StringFieldUpdateOperationsInput | string
    mg_grant_manager?: IntFieldUpdateOperationsInput | number
    mg_grant_account?: IntFieldUpdateOperationsInput | number
    mg_grant_institute?: IntFieldUpdateOperationsInput | number
    mg_grant_result?: IntFieldUpdateOperationsInput | number
    mg_grant_statistic?: IntFieldUpdateOperationsInput | number
    mg_grant_inquiry?: IntFieldUpdateOperationsInput | number
    mg_grant_log?: IntFieldUpdateOperationsInput | number
  }

  export type mwd_managerUncheckedUpdateWithoutLogin_logsInput = {
    mg_seq?: IntFieldUpdateOperationsInput | number
    mg_email?: StringFieldUpdateOperationsInput | string
    mg_pw?: StringFieldUpdateOperationsInput | string
    mg_name?: StringFieldUpdateOperationsInput | string
    mg_use?: StringFieldUpdateOperationsInput | string
    mg_cellphone?: StringFieldUpdateOperationsInput | string
    mg_grant_manager?: IntFieldUpdateOperationsInput | number
    mg_grant_account?: IntFieldUpdateOperationsInput | number
    mg_grant_institute?: IntFieldUpdateOperationsInput | number
    mg_grant_result?: IntFieldUpdateOperationsInput | number
    mg_grant_statistic?: IntFieldUpdateOperationsInput | number
    mg_grant_inquiry?: IntFieldUpdateOperationsInput | number
    mg_grant_log?: IntFieldUpdateOperationsInput | number
  }

  export type mwd_log_login_managerCreateManyManagerInput = {
    login_date: Date | string
    user_agent: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUpdateWithoutManagerInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_agent?: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUncheckedUpdateWithoutManagerInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_agent?: JsonNullValueInput | InputJsonValue
  }

  export type mwd_log_login_managerUncheckedUpdateManyWithoutManagerInput = {
    login_date?: DateTimeFieldUpdateOperationsInput | Date | string
    user_agent?: JsonNullValueInput | InputJsonValue
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}